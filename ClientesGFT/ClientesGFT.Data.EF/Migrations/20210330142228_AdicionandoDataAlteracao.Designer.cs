// <auto-generated />
using System;
using ClientesGFT.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientesGFT.Data.EF.Migrations
{
    [DbContext(typeof(ClientesGFTContext))]
    [Migration("20210330142228_AdicionandoDataAlteracao")]
    partial class AdicionandoDataAlteracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int?>("IdStatusAtual")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Rg")
                        .HasColumnName("RG")
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasName("UQ__Clientes__C1F89731CDBAAC7A")
                        .HasFilter("[CPF] IS NOT NULL");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdStatusAtual");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.ClientesTelefones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Clientes_Telefones");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.EnderecoModels.Cidades", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cidade")
                        .IsUnique()
                        .HasName("UQ__Cidades__15F7A8DA6F9206A9");

                    b.HasIndex("IdEstado");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.EnderecoModels.Estados", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .IsUnique()
                        .HasName("UQ__Estados__36DF552F9175DA7F");

                    b.HasIndex("IdPais");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.EnderecoModels.Paises", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Pais")
                        .IsUnique()
                        .HasName("UQ__Paises__A15FFF7DE1A4457E");

                    b.HasIndex("Sigla")
                        .IsUnique()
                        .HasName("UQ__Paises__3199C5ED121356C0");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Enderecos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.FluxoAprovacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Fluxo_Aprovacao");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Perfils", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Perfils");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.StatusFluxo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Status_Fluxo");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdPerfil")
                        .HasName("PK__USUARIO_PERFIL");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Usuario_Perfil");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasName("UQ__Usuarios__5E55825BE0CCFE30");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Clientes", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.Enderecos", "Endereco")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEndereco")
                        .HasConstraintName("FK__CLIENTES__ENDERECO");

                    b.HasOne("ClientesGFT.Data.EF.Models.StatusFluxo", "StatusAtual")
                        .WithMany("Clientes")
                        .HasForeignKey("IdStatusAtual")
                        .HasConstraintName("FK__CLIENTES__STATUS_FLUXO");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.ClientesTelefones", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.Clientes", "Cliente")
                        .WithMany("ClientesTelefones")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__CLIENTES_TELEFONES__CLIENTE");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.EnderecoModels.Cidades", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.EnderecoModels.Estados", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__CIDADES__ESTADO")
                        .IsRequired();
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.EnderecoModels.Estados", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.EnderecoModels.Paises", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdPais")
                        .HasConstraintName("FK__ESTADOS__PAIS")
                        .IsRequired();
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.Enderecos", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.EnderecoModels.Cidades", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("FK__ENDERECOS__CIDADE");
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.FluxoAprovacao", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.Clientes", "Cliente")
                        .WithMany("FluxoAprovacao")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__FLUXO_APROVACAO__CLIENTE")
                        .IsRequired();

                    b.HasOne("ClientesGFT.Data.EF.Models.StatusFluxo", "Status")
                        .WithMany("FluxoAprovacao")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK__FLUXO_APROVACAO__STATUS_ANTERIOR__STATUS_FLUXO")
                        .IsRequired();

                    b.HasOne("ClientesGFT.Data.EF.Models.Usuarios", "Usuario")
                        .WithMany("FluxoAprovacao")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__FLUXO_APROVACAO__USUARIO")
                        .IsRequired();
                });

            modelBuilder.Entity("ClientesGFT.Data.EF.Models.UsuarioPerfil", b =>
                {
                    b.HasOne("ClientesGFT.Data.EF.Models.Perfils", "Perfil")
                        .WithMany("UsuarioPerfil")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("FK__USUARIO_PERFIL__PERFIL")
                        .IsRequired();

                    b.HasOne("ClientesGFT.Data.EF.Models.Usuarios", "Usuario")
                        .WithMany("UsuarioPerfil")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__USUARIO_PERFIL__USUARIO")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
